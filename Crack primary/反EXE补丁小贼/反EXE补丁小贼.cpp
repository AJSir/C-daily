// 反EXE补丁小贼.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"
#include <windows.h>

/* 无标题1 (2016/1/20 14:43:00)
起始偏移: 00000000, 尾部偏移: 000000A4, 长度: 000000A5 */

BYTE rawData[165] = {
	0x8B, 0xF8, 0x8D, 0x4D, 0xE8, 0xF7, 0xDF, 0x1B, 0xFF, 0x47, 0xF7, 0xDF,
	0xFF, 0x15, 0x90, 0x10, 0x40, 0x00, 0x8D, 0x4D, 0xE4, 0xFF, 0x15, 0x94,
	0x10, 0x40, 0x00, 0x66, 0x3B, 0xFB, 0xB9, 0x04, 0x00, 0x02, 0x80, 0xB8,
	0x0A, 0x00, 0x00, 0x00, 0xBB, 0x08, 0x00, 0x00, 0x00, 0x89, 0x4D, 0xAC,
	0x89, 0x4D, 0xBC, 0x89, 0x45, 0xA4, 0x89, 0x45, 0xB4, 0xC7, 0x45, 0x8C,
	0x54, 0x1C, 0x40, 0x00, 0x89, 0x5D, 0x84, 0x8D, 0x55, 0x84, 0x8D, 0x4D,
	0xC4, 0x0F, 0x84, 0xF7, 0x00, 0x00, 0x00, 0x8B, 0x3D, 0x7C, 0x10, 0x40,
	0x00, 0xFF, 0xD7, 0x8D, 0x55, 0x94, 0x8D, 0x4D, 0xD4, 0xC7, 0x45, 0x9C,
	0x44, 0x1C, 0x40, 0x00, 0x89, 0x5D, 0x94, 0xFF, 0xD7, 0x8D, 0x4D, 0xA4,
	0x8D, 0x55, 0xB4, 0x51, 0x8D, 0x45, 0xC4, 0x52, 0x50, 0x8D, 0x4D, 0xD4,
	0x6A, 0x40, 0x51, 0xFF, 0x15, 0x24, 0x10, 0x40, 0x00, 0x8D, 0x55, 0xA4,
	0x8D, 0x45, 0xB4, 0x52, 0x8D, 0x4D, 0xC4, 0x50, 0x8D, 0x55, 0xD4, 0x51,
	0x52, 0x6A, 0x04, 0xFF, 0x15, 0x0C, 0x10, 0x40, 0x00, 0x8B, 0x06, 0x83,
	0xC4, 0x14, 0x56, 0xFF, 0x90, 0xB4, 0x02, 0x00, 0x00
};

BYTE szKey[165] = {
	0x8B, 0xF8, 0x8D, 0x4D, 0xE8, 0xF7, 0xDF, 0x1B, 0xFF, 0x47, 0xF7, 0xDF,
	0xFF, 0x15, 0x90, 0x10, 0x40, 0x00, 0x8D, 0x4D, 0xE4, 0xFF, 0x15, 0x94,
	0x10, 0x40, 0x00, 0x66, 0x3B, 0xFB, 0xB9, 0x04, 0x00, 0x02, 0x80, 0xB8,
	0x0A, 0x00, 0x00, 0x00, 0xBB, 0x08, 0x00, 0x00, 0x00, 0x89, 0x4D, 0xAC,
	0x89, 0x4D, 0xBC, 0x89, 0x45, 0xA4, 0x89, 0x45, 0xB4, 0xC7, 0x45, 0x8C,
	0x54, 0x1C, 0x40, 0x00, 0x89, 0x5D, 0x84, 0x8D, 0x55, 0x84, 0x8D, 0x4D,
	0xC4, 0x0F, 0x85, 0xF7, 0x00, 0x00, 0x00, 0x8B, 0x3D, 0x7C, 0x10, 0x40,
	0x00, 0xFF, 0xD7, 0x8D, 0x55, 0x94, 0x8D, 0x4D, 0xD4, 0xC7, 0x45, 0x9C,
	0x44, 0x1C, 0x40, 0x00, 0x89, 0x5D, 0x94, 0xFF, 0xD7, 0x8D, 0x4D, 0xA4,
	0x8D, 0x55, 0xB4, 0x51, 0x8D, 0x45, 0xC4, 0x52, 0x50, 0x8D, 0x4D, 0xD4,
	0x6A, 0x40, 0x51, 0xFF, 0x15, 0x24, 0x10, 0x40, 0x00, 0x8D, 0x55, 0xA4,
	0x8D, 0x45, 0xB4, 0x52, 0x8D, 0x4D, 0xC4, 0x50, 0x8D, 0x55, 0xD4, 0x51,
	0x52, 0x6A, 0x04, 0xFF, 0x15, 0x0C, 0x10, 0x40, 0x00, 0x8B, 0x06, 0x83,
	0xC4, 0x14, 0x56, 0xFF, 0x90, 0xB4, 0x02, 0x00, 0x00
};

HANDLE g_hProcess = 0;

void GetProcess(){
	HWND hWnd = FindWindow(NULL, L"第7课 神秘调试器 作业");
	DWORD dwPid = 0;
	GetWindowThreadProcessId(hWnd, &dwPid);
	g_hProcess = OpenProcess(PROCESS_ALL_ACCESS, false, dwPid);
}

//线程回调函数,写入垃圾数据
DWORD WINAPI WriteMemory(LPVOID lpParamenter){
	while (true)
	{
		WriteProcessMemory(g_hProcess, (LPVOID)0x004151C7, rawData, sizeof(rawData), NULL);
	}
	return 1;
}

int _tmain(int argc, _TCHAR* argv[])
{
 	puts("准备打开进程");
 	GetProcess();
	HANDLE hThread1 = CreateThread(NULL, 0, WriteMemory, NULL, 0, NULL);
	Sleep(5 * 1000);
	TerminateThread(hThread1,-1);//终止线程
	CloseHandle(hThread1);//关闭线程句柄
	WriteProcessMemory(g_hProcess, (LPVOID)0x004151C7, szKey, sizeof(szKey), NULL);
	puts("注入数据成功");
	return 0;
}

